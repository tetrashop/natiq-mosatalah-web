from http.server import HTTPServer, BaseHTTPRequestHandler
import json
import chess
import random

class ChessEngine:
    def get_best_move(self):
        board = chess.Board()
        moves = list(board.legal_moves)
        return random.choice(moves) if moves else None

class ContentWriter:
    def generate_content(self, topic):
        contents = {
            "Ù‡ÙˆØ´ Ù…ØµÙ†ÙˆØ¹ÛŒ": "Ù‡ÙˆØ´ Ù…ØµÙ†ÙˆØ¹ÛŒ ØªØ­ÙˆÙ„ Ø¹Ø¸ÛŒÙ…ÛŒ Ø¯Ø± ØªÚ©Ù†ÙˆÙ„ÙˆÚ˜ÛŒ Ø§ÛŒØ¬Ø§Ø¯ Ú©Ø±Ø¯Ù‡ Ø§Ø³Øª.",
            "Ø´Ø·Ø±Ù†Ø¬": "Ø´Ø·Ø±Ù†Ø¬ Ø¨Ø§Ø²ÛŒ Ø§Ø³ØªØ±Ø§ØªÚ˜ÛŒÚ© Ø¨Ø§ ØªØ§Ø±ÛŒØ®Ú†Ù‡ Ú©Ù‡Ù† Ø§Ø³Øª.",
            "Ø¨Ø±Ù†Ø§Ù…Ù‡â€ŒÙ†ÙˆÛŒØ³ÛŒ": "Ø¨Ø±Ù†Ø§Ù…Ù‡â€ŒÙ†ÙˆÛŒØ³ÛŒ Ù‡Ù†Ø± Ø­Ù„ Ù…Ø³Ø¦Ù„Ù‡ Ø¨Ø§ Ú©Ø¯ Ø§Ø³Øª."
        }
        return contents.get(topic, "Ù…Ø­ØªÙˆØ§ ØªÙˆÙ„ÛŒØ¯ Ø´Ø¯")

class APIHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(json.dumps({
                "status": "active", 
                "message": "Natiq Backend Running"
            }).encode())
        else:
            self.send_error(404)
    
    def do_POST(self):
        if self.path == '/api/chess/move':
            engine = ChessEngine()
            move = engine.get_best_move()
            
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(json.dumps({
                "best_move": str(move),
                "status": "success"
            }).encode())
            
        elif self.path == '/api/writer/generate':
            writer = ContentWriter()
            content = writer.generate_content('Ù‡ÙˆØ´ Ù…ØµÙ†ÙˆØ¹ÛŒ')
            
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(json.dumps({
                "content": content,
                "status": "success"
            }).encode())
        else:
            self.send_error(404)
    
    def do_OPTIONS(self):
        self.send_response(200)
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        self.end_headers()

print("ðŸš€ Starting Natiq Backend on http://localhost:8000")
server = HTTPServer(('localhost', 8000), APIHandler)
server.serve_forever()
